package com.pandoracheckout.checkout.entity;


public enum EStatus {
  ACCEPT_FARMER,
  ACCEPT_FACTORY,
  REJECT_FARMER,
  REJECT_FACTORY,

  //Estos dos estados son cuando se cargan los valores de truckin y water
  //falta corregir
  ACCEPT_FACTORY_TRUCK_IN,
  ACCEPT_FACTORY_WATER_DG,
//los estados de abajo son de auditoria:
  ACCEPT_FARMER_TRUCK_IN,
  ACCEPT_FARMER_WATER_DG,
  //AUDITORIA PARA PEDIR NUEVO VALOR
  REJECT_FARMER_TRUCK_IN,
  REJECT_FARMER_WATER_DG,
  REJECT_TRUCK_IN_ACCEPTED_WATER_DG,
  REJECT_WATER_DG_ACCEPTED_TRUCK_IN,
  REJECT_TRUCK_IN_AND_WATER_DG,


 //ESTADO FINAL SI SE CUMPLE TODO
 ACCEPT_CHECKIN
}

 //IMPORTANTE!!! CARGAR LOS ROLES EN LA BASE DE DATOS

//flujos de estados: CAMINO FELIZ!!!
//ACCEPT_FACTORY_TRUCK_IN-->ACCEPT_FARMER_TRUCK_IN-->
//ACCEPT_FACTORY_WATER_DG-->ACCEPT_FARMER_WATER_DG-->
//ACCEPT_FACTORY_TRUCK_OUT-->ACCEPT_FARMER_TRUCK_OUT-->ACCEPT_FARMER_FACTORY(ESTADO FINAL)

//IMPORTANTE!!! CAMINO NO FELIZ:

//ACCEPT_FACTORY_TRUCK_IN-->REJECT_FARMER_TRUCK_IN-->ACCEPT_FARMER_TRUCK_IN-->(ABORT_FARMER)-->
//ACCEPT_FACTORY_WATER_DG-->REJECT_FARMER_WATER_DG-->ACCEPT_FARMER_WATER_DG-->(ABORT_FARMER)-->
//ACCEPT_FACTORY_TRUCK_OUT-->REJECT_FARMER_TRUCK_OUT-->ACCEPT_FARMER_TRUCK_OUT-->(ABORT_FARMER)-->ACCEPT_FARMER_FACTORY(ESTADO FINAL)
